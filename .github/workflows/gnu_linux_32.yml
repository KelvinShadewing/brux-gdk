name: GNU/Linux (32 Bit)
on:
  push:
    branches: [ "main" ]
    paths:
      - rte/src/*
  pull_request:
    branches: [ "main" ]
    paths:
      - rte/src/*
  workflow_dispatch:

jobs:
  gnu-linux:
    strategy:
      matrix:
#        arch: [32, 64]
        arch: [32]
        build_type: [release]
        include:
          - build_type: release
            arch: 32

    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Install 32-bit dependencies
        if: ${{ matrix.arch == 32 }}
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update

          sudo apt-get install -y \
            cmake \
            build-essential \
            gcc-multilib \
            g++-multilib \
            pkgconf:i386 \
            libsdl2-dev:i386 \
            libsdl2-image-dev:i386 \
            libsdl2-mixer-dev:i386 \
            libsdl2-net-dev:i386 \
            libflac-dev:i386 \
            libjpeg-dev:i386 \
            libpng-dev:i386 \
            libtiff-dev:i386 \
            libfluidsynth-dev:i386 \
            libmodplug-dev:i386 \
            libmpg123-dev:i386 \
            libvorbis-dev:i386 \
            libopusfile-dev:i386 \
            libzstd-dev:i386 \
            libgit2-dev:i386 \
            meson

      - name: Set compiler (gcc)
        run: |
          echo "CXX=g++" >> $GITHUB_ENV
          echo "CC=gcc" >> $GITHUB_ENV

      - name: Configure build
        env:
          ARCH: ${{ matrix.arch == 32 && '-DCMAKE_C_FLAGS=-m32 -DCMAKE_CXX_FLAGS=-m32' || '' }}
          BUILD_TYPE: ${{ matrix.build_type }}
        run: |
          meson --version
          $CXX --version
          cd rte
          PKG_CONFIG_PATH="/usr/lib/i386-linux-gnu/pkgconfig:/usr/local/lib/x86_64-linux-gnu/pkgconfig:/usr/local/lib/pkgconfig:/usr/local/share/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/lib/pkgconfig:/usr/share/pkgconfig" meson setup build --cross-file crossfile/i386.cross

      - name: Build
        working-directory: rte/build
        run: |
          meson compile
          DESTDIR=bin meson install

      - name: Package
        uses: actions/upload-artifact@v4
        with:
          name: "Brux-GNULinux-${{ matrix.arch }}-${{ matrix.build_type }}-binary"
          path: "rte/build/bin"
